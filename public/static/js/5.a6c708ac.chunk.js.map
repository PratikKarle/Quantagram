{"version":3,"sources":["shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/http-hook.js","shared/components/UIElements/Card.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","shared/util/validators.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","places/pages/UpdatePlace.js"],"names":["ErrorModal","props","React","createElement","Modal","onCancel","onClear","header","show","error","footer","Button","onClick","ModalOverlay","content","className","concat","style","headerClass","onSubmit","event","preventDefault","contentClass","children","footerClass","ReactDOM","createPortal","document","getElementById","Fragment","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","useHttpClient","isLoading","setIsLoading","useState","setError","activeHttpRequests","useRef","sendRequest","useCallback","async","url","method","arguments","length","undefined","body","headers","HttpabortController","AbortController","current","push","response","fetch","signal","responseData","json","filter","reqCtrl","ok","Error","message","err","useEffect","forEach","abortController","abort","clearError","Card","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","apply","_objectSpread2","target","i","source","getOwnPropertyDescriptors","defineProperties","VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","validators","isValid","validator","trim","test","inputReducer","state","action","_objectSpread","isTouched","Input","inputState","dispatch","useReducer","initialValue","initialValid","id","onInput","changeHandler","touchHandler","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","intialInputs","initialFormValidity","formState","inputData","formValidity","UpdatePlace","auth","useContext","AuthContext","loadedPlace","setLoadedPlace","placeId","useParams","history","useHistory","inputHandler","setFormData","title","description","process","Authorization","token","place","fetchPlace","LoadingSpinner","JSON","stringify","console","log","userId","disabled"],"mappings":"qGAAA,oCAkBeA,IAbIC,GAEfC,IAAAC,cAACC,IAAK,CACJC,SAAUJ,EAAMK,QAChBC,OAAO,qBACPC,OAAQP,EAAMQ,MACdC,OAAQR,IAAAC,cAACQ,IAAM,CAACC,QAASX,EAAMK,SAAS,SAExCJ,IAAAC,cAAA,SAAIF,EAAMQ,S,gCCbhB,0DAOA,MAAMI,EAAeZ,IACnB,MAAMa,EACJZ,IAAAC,cAAA,OAAKY,UAAS,SAAAC,OAAWf,EAAMc,WAAaE,MAAOhB,EAAMgB,OACvDf,IAAAC,cAAA,UAAQY,UAAS,iBAAAC,OAAmBf,EAAMiB,cACxChB,IAAAC,cAAA,UAAKF,EAAMM,SAEbL,IAAAC,cAAA,QACEgB,SACElB,EAAMkB,SAAWlB,EAAMkB,SAAWC,GAASA,EAAMC,kBAGnDnB,IAAAC,cAAA,OAAKY,UAAS,kBAAAC,OAAoBf,EAAMqB,eACrCrB,EAAMsB,UAETrB,IAAAC,cAAA,UAAQY,UAAS,iBAAAC,OAAmBf,EAAMuB,cACvCvB,EAAMS,UAKf,OAAOe,IAASC,aAAaZ,EAASa,SAASC,eAAe,gBAoBjDxB,IAjBDH,GAEVC,IAAAC,cAACD,IAAM2B,SAAQ,KACZ5B,EAAMO,MAAQN,IAAAC,cAAC2B,IAAQ,CAAClB,QAASX,EAAMI,WACxCH,IAAAC,cAAC4B,IAAa,CACZC,GAAI/B,EAAMO,KACVyB,cAAY,EACZC,eAAa,EACbC,QAAS,IACTC,WAAW,SAEXlC,IAAAC,cAACU,EAAiBZ,M,gCCzC1B,6CAEO,MAAMoC,EAAgBA,KAC3B,MAAOC,EAAUC,GAAgBC,oBAAS,IACnC/B,EAAMgC,GAAYD,qBAEjBE,EAAqBC,iBAAO,IAE9BC,EAAcC,uBAAYC,eAAOC,GACtC,IAD0CC,EAAMC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAC,MAAMG,EAAIH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAC,KAAKI,EAAOJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAC,GAExE,IACIV,GAAa,GAEb,MAAMe,EAAsB,IAAIC,gBAChCb,EAAmBc,QAAQC,KAAKH,GAEhC,MAAMI,QAAiBC,MAAMZ,EAAI,CAC7BC,SACAI,OACAC,UACAO,OAAON,EAAoBM,SAGzBC,QAAqBH,EAASI,OAGpC,GADApB,EAAmBc,QAAUd,EAAmBc,QAAQO,OAAOC,GAAWA,IAAWV,IACjFI,EAASO,GAEX,MAAM,IAAIC,MAAML,EAAaM,SAG/B,OADA5B,GAAa,GACNsB,EAEX,MAAMO,GAGF,MAFA3B,EAAS2B,EAAID,SAAW,wBACxB5B,GAAa,GACP6B,KAEV,IAeF,OATAC,oBACE,IACW,KACH3B,EAAmBc,QAAQc,QAAQC,IAC/BA,EAAgBC,WAG1B,IAEG,CAAClC,YAAU7B,QAAMmC,cAAa6B,WAblBA,KACjBhC,EAAS,U,qDCzCb,0BAYeiC,IARFzE,GAETC,IAAAC,cAAA,OAAKY,UAAS,QAAAC,OAAUf,EAAMc,WAAaE,MAAOhB,EAAMgB,OACrDhB,EAAMsB,W,gCCPE,SAASoD,EAAgBC,EAAKC,EAAKC,GAYhD,OAXID,KAAOD,EACTG,OAAOC,eAAeJ,EAAKC,EAAK,CAC9BC,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZP,EAAIC,GAAOC,EAGNF,ECVT,SAASQ,EAAQC,EAAQC,GACvB,IAAIC,EAAOR,OAAOQ,KAAKF,GAEvB,GAAIN,OAAOS,sBAAuB,CAChC,IAAIC,EAAUV,OAAOS,sBAAsBH,GACvCC,IAAgBG,EAAUA,EAAQ1B,QAAO,SAAU2B,GACrD,OAAOX,OAAOY,yBAAyBN,EAAQK,GAAKT,eAEtDM,EAAK9B,KAAKmC,MAAML,EAAME,GAGxB,OAAOF,EAGM,SAASM,EAAeC,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAI9C,UAAUC,OAAQ6C,IAAK,CACzC,IAAIC,EAAyB,MAAhB/C,UAAU8C,GAAa9C,UAAU8C,GAAK,GAE/CA,EAAI,EACNX,EAAQL,OAAOiB,IAAS,GAAM1B,SAAQ,SAAUO,GAC9C,EAAeiB,EAAQjB,EAAKmB,EAAOnB,OAE5BE,OAAOkB,0BAChBlB,OAAOmB,iBAAiBJ,EAAQf,OAAOkB,0BAA0BD,IAEjEZ,EAAQL,OAAOiB,IAAS1B,SAAQ,SAAUO,GACxCE,OAAOC,eAAec,EAAQjB,EAAKE,OAAOY,yBAAyBK,EAAQnB,OAKjF,OAAOiB,EAjCT,mC,gCCAA,8IAQaK,EAAoBA,KAAA,CAASC,KARX,YAUlBC,EAAsBC,IAAG,CACpCF,KAV+B,YAW/BE,IAAKA,IAQMC,EAAkBA,KAAA,CAASH,KAfX,UAiBhBI,EAAWA,CAAC1B,EAAO2B,KAC9B,IAAIC,GAAU,EACd,IAAK,MAAMC,KAAaF,EAxBK,YAyBvBE,EAAUP,OACZM,EAAUA,GAAW5B,EAAM8B,OAAO1D,OAAS,GAzBhB,cA2BzByD,EAAUP,OACZM,EAAUA,GAAW5B,EAAM8B,OAAO1D,QAAUyD,EAAUL,KA3B3B,cA6BzBK,EAAUP,OACZM,EAAUA,GAAW5B,EAAM8B,OAAO1D,QAAUyD,EAAUL,KA7BjC,QA+BnBK,EAAUP,OACZM,EAAUA,IAAY5B,GAAS6B,EAAUL,KA/BpB,QAiCnBK,EAAUP,OACZM,EAAUA,IAAY5B,GAAS6B,EAAUL,KAjClB,UAmCrBK,EAAUP,OACZM,EAAUA,GAAW,iBAAiBG,KAAK/B,IAG/C,OAAO4B,I,+FCvCT,MAAMI,EAAeA,CAACC,EAAOC,KAC3B,OAAQA,EAAOZ,MACb,IAAK,SACH,OAAAa,wBAAA,GACKF,GAAK,IACRjC,MAAOkC,EAAOV,IACdI,QAASF,YAASQ,EAAOV,IAAKU,EAAOP,cAEzC,IAAK,QACH,OAAAQ,wBAAA,GACKF,GAAK,IACRG,WAAW,IAGf,QACE,OAAOH,IAgEEI,IA5DDlH,IACZ,MAAOmH,EAAYC,GAAYC,qBAAWR,EAAc,CACtDhC,MAAO7E,EAAMsH,cAAgB,GAC7BL,WAAW,EACXR,QAASzG,EAAMuH,eAAgB,KAG3B,GAAEC,EAAE,QAAEC,GAAYzH,GAClB,MAAE6E,EAAK,QAAE4B,GAAYU,EAE3B/C,oBAAU,KACRqD,EAAQD,EAAI3C,EAAO4B,IAClB,CAACe,EAAI3C,EAAO4B,EAASgB,IAExB,MAAMC,EAAgBvG,IACpBiG,EAAS,CACPjB,KAAM,SACNE,IAAKlF,EAAM0E,OAAOhB,MAClB2B,WAAYxG,EAAMwG,cAIhBmB,EAAeA,KACnBP,EAAS,CACPjB,KAAM,WAIJyB,EACc,UAAlB5H,EAAM4H,QACJ3H,IAAAC,cAAA,SACEsH,GAAIxH,EAAMwH,GACVrB,KAAMnG,EAAMmG,KACZ0B,YAAa7H,EAAM6H,YACnBC,SAAUJ,EACVK,OAAQJ,EACR9C,MAAOsC,EAAWtC,QAGpB5E,IAAAC,cAAA,YACEsH,GAAIxH,EAAMwH,GACVQ,KAAMhI,EAAMgI,MAAQ,EACpBF,SAAUJ,EACVK,OAAQJ,EACR9C,MAAOsC,EAAWtC,QAIxB,OACE5E,IAAAC,cAAA,OACEY,UAAS,gBAAAC,QAAmBoG,EAAWV,SAAWU,EAAWF,WAC3D,0BAEFhH,IAAAC,cAAA,SAAO+H,QAASjI,EAAMwH,IAAKxH,EAAMkI,OAChCN,GACCT,EAAWV,SAAWU,EAAWF,WAAahH,IAAAC,cAAA,SAAIF,EAAMmI,c,0GC7EhE,MAAMC,EAAcA,CAACtB,EAAOC,KACxB,OAAQA,EAAOZ,MACb,IAAK,eACH,IAAIkC,GAAc,EAClB,IAAK,MAAMC,KAAWxB,EAAMyB,OACtBzB,EAAMyB,OAAOD,KAKbD,EADEC,IAAYvB,EAAOuB,QACPD,GAAetB,EAAON,QAEtB4B,GAAevB,EAAMyB,OAAOD,GAAS7B,SAGzD,OAAAO,wBAAA,GACKF,GAAK,IACRyB,OAAMvB,wBAAA,GACDF,EAAMyB,QAAM,IACf,CAACxB,EAAOuB,SAAU,CAAEzD,MAAOkC,EAAOlC,MAAO4B,QAASM,EAAON,WAE3DA,QAAS4B,IAEb,IAAK,WACH,MAAO,CACLE,OAAQxB,EAAOwB,OACf9B,QAASM,EAAON,SAEpB,QACE,OAAOK,IAIF0B,EAAUA,CAACC,EAAaC,KACjC,MAAOC,EAAWvB,GAAYC,qBAAWe,EAAa,CAClDG,OAAOE,EACPhC,QAASiC,IAoBb,MAAO,CAACC,EAjBe/F,sBAAY,CAAC4E,EAAI3C,EAAO4B,KAC3CW,EAAS,CACPjB,KAAM,eACNtB,MAAOA,EACP4B,QAASA,EACT6B,QAASd,KAEV,IAEiB5E,sBAAY,CAACgG,EAAWC,KAC1CzB,EAAS,CACPjB,KAAM,WACNoC,OAAQK,EACRnC,QAASoC,KAEX,O,qDCxDR,gHA4IeC,UA3HKA,KAClB,MAAMC,EAAOC,qBAAWC,MAClB,UAAE5G,EAAS,MAAE7B,EAAK,YAAEmC,EAAW,WAAE6B,GAAepC,eAC/C8G,EAAaC,GAAkB5G,qBAChC6G,EAAUC,cAAYD,QACtBE,EAAUC,eAETZ,EAAWa,EAAcC,GAAejB,YAC7C,CACEkB,MAAO,CACL7E,MAAO,GACP4B,SAAS,GAEXkD,YAAa,CACX9E,MAAO,GACP4B,SAAS,KAGb,GAGFrC,oBAAU,KACWvB,WACjB,IACE,MAAMe,QAAqBjB,EAAY,GAAD5B,OACjC6I,wDAAiC,YAAA7I,OAAWqI,GAAU,MAAM,KAC/D,CACES,cAAe,UAAYd,EAAKe,QAGpCX,EAAevF,EAAamG,OAC5BN,EACE,CACEC,MAAO,CACL7E,MAAOjB,EAAamG,MAAML,MAC1BjD,SAAS,GAEXkD,YAAa,CACX9E,MAAOjB,EAAamG,MAAMJ,YAC1BlD,SAAS,KAGb,GAGF,MAAOtC,MAEX6F,IACC,CAACrH,EAAayG,EAASK,EAAaV,EAAKe,QAsB5C,OAAIzH,EAEApC,IAAAC,cAAA,OAAKY,UAAU,UACbb,IAAAC,cAAC+J,IAAc,OAKhBf,GAAgB1I,EAWnBP,IAAAC,cAACD,IAAM2B,SAAQ,KACb3B,IAAAC,cAACH,IAAU,CAACS,MAAOA,EAAOH,QAASmE,KACjCnC,GAAa6G,GACbjJ,IAAAC,cAAA,QAAMY,UAAU,aAAaI,SA1CF2B,UAC/B1B,EAAMC,iBACN,UACQuB,EAAY,GAAD5B,OACZ6I,wDAAiC,YAAA7I,OAAWqI,GAC/C,QACAc,KAAKC,UAAU,CACbT,MAAOf,EAAUJ,OAAOmB,MAAM7E,MAC9B8E,YAAahB,EAAUJ,OAAOoB,YAAY9E,QAE5C,CACE,eAAgB,mBAChB,cAAiB,UAAYkE,EAAKe,QAGtCM,QAAQC,IAAItB,EAAKuB,QACjBhB,EAAQ9F,KAAK,IAAMuF,EAAKuB,OAAS,WACjC,MAAOnG,OA0BHlE,IAAAC,cAACgH,IAAK,CACJM,GAAG,QACHI,QAAQ,QACRzB,KAAK,OACL+B,MAAM,QACN1B,WAAY,CAACN,eACbiC,UAAU,8BACVV,QAAS+B,EACTlC,aAAc4B,EAAYQ,MAC1BnC,cAAc,IAEhBtH,IAAAC,cAACgH,IAAK,CACJM,GAAG,cACHI,QAAQ,WACRM,MAAM,cACN1B,WAAY,CAACJ,YAAoB,IACjC+B,UAAU,wDACVV,QAAS+B,EACTlC,aAAc4B,EAAYS,YAC1BpC,cAAc,IAEhBtH,IAAAC,cAACQ,IAAM,CAACyF,KAAK,SAASoE,UAAW5B,EAAUlC,SAAS,kBAlCxDxG,IAAAC,cAAA,OAAKY,UAAU,UACbb,IAAAC,cAACuE,IAAI,KACHxE,IAAAC,cAAA,UAAI","file":"static/js/5.a6c708ac.chunk.js","sourcesContent":["import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import { useState,useCallback, useRef, useEffect } from 'react';\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading,setIsLoading] = useState(false);\r\n  const [error,setError] = useState();\r\n\r\n    const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(async (url,method=\"GET\",body=null,headers={}) => \r\n  {\r\n    try{\r\n        setIsLoading(true);\r\n\r\n        const HttpabortController = new AbortController();\r\n        activeHttpRequests.current.push(HttpabortController);\r\n\r\n        const response = await fetch(url,{\r\n            method,\r\n            body,\r\n            headers,\r\n            signal:HttpabortController.signal\r\n        });\r\n  \r\n        const responseData = await response.json();\r\n\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(reqCtrl => reqCtrl!== HttpabortController)\r\n        if(!response.ok)\r\n        {\r\n          throw new Error(responseData.message);\r\n        }\r\n        setIsLoading(false);\r\n        return responseData;\r\n    }\r\n    catch(err){\r\n        setError(err.message || 'Something went Wrong');\r\n        setIsLoading(false);\r\n        throw err;\r\n    }\r\n  },[])\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  }\r\n\r\n  useEffect(\r\n    ()=> {    \r\n        return ()=>{\r\n            activeHttpRequests.current.forEach(abortController => {\r\n                abortController.abort();\r\n            });\r\n        };\r\n    },[]);\r\n\r\n  return {isLoading,error,sendRequest, clearError};\r\n}","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n    case 'TOUCH': {\n      return {\n        ...state,\n        isTouched: true\n      }\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid)\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${!inputState.isValid && inputState.isTouched &&\n        'form-control--invalid'}`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import { useCallback, useReducer } from 'react';\r\n\r\nconst formReducer = (state, action) => {\r\n    switch (action.type) {\r\n      case 'INPUT_CHANGE':\r\n        let formIsValid = true;\r\n        for (const inputId in state.inputs) {\r\n          if(!state.inputs[inputId])\r\n          {\r\n            continue;\r\n          }\r\n            if (inputId === action.inputId) {\r\n              formIsValid = formIsValid && action.isValid;\r\n            } else {\r\n              formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n            }\r\n        }\r\n        return {\r\n          ...state,\r\n          inputs: {\r\n            ...state.inputs,\r\n            [action.inputId]: { value: action.value, isValid: action.isValid }\r\n          },\r\n          isValid: formIsValid\r\n        };\r\n      case 'SET_DATA':\r\n        return {\r\n          inputs: action.inputs,\r\n          isValid: action.isValid\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\nexport const useForm = (intialInputs,initialFormValidity) => {\r\n    const [formState, dispatch] = useReducer(formReducer, {\r\n        inputs:intialInputs,\r\n        isValid: initialFormValidity\r\n      });\r\n\r\n      const inputHandler = useCallback((id, value, isValid) => {\r\n        dispatch({\r\n          type: 'INPUT_CHANGE',\r\n          value: value,\r\n          isValid: isValid,\r\n          inputId: id\r\n        });\r\n      }, []);\r\n\r\n      const setFormData = useCallback((inputData, formValidity)=>{\r\n        dispatch({\r\n          type: 'SET_DATA',\r\n          inputs: inputData,\r\n          isValid: formValidity,\r\n        });\r\n      },[]);\r\n\r\n    return [formState, inputHandler, setFormData];\r\n}","import React, { useEffect, useState, useContext } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\n\r\nimport Input from '../../shared/components/FormElements/Input';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport {\r\n  VALIDATOR_REQUIRE,\r\n  VALIDATOR_MINLENGTH\r\n} from '../../shared/util/validators';\r\nimport { useForm } from '../../shared/hooks/form-hook';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport './PlaceForm.css';\r\n\r\nconst UpdatePlace = () => {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [loadedPlace, setLoadedPlace] = useState();\r\n  const placeId = useParams().placeId;\r\n  const history = useHistory();\r\n\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      title: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      description: {\r\n        value: '',\r\n        isValid: false\r\n      }\r\n    },\r\n    false\r\n  );\r\n\r\n  useEffect(() => {\r\n    const fetchPlace = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`,'GET',null,\r\n          {\r\n            Authorization: 'Bearer ' + auth.token\r\n          }\r\n        );\r\n        setLoadedPlace(responseData.place);\r\n        setFormData(\r\n          {\r\n            title: {\r\n              value: responseData.place.title,\r\n              isValid: true\r\n            },\r\n            description: {\r\n              value: responseData.place.description,\r\n              isValid: true\r\n            }\r\n          },\r\n          true\r\n        );\r\n\r\n      } catch (err) {}\r\n    };\r\n    fetchPlace();\r\n  }, [sendRequest, placeId, setFormData, auth.token]);\r\n\r\n  const placeUpdateSubmitHandler = async event => {\r\n    event.preventDefault();\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`,\r\n        'PATCH',\r\n        JSON.stringify({\r\n          title: formState.inputs.title.value,\r\n          description: formState.inputs.description.value\r\n        }),\r\n        {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'Bearer ' + auth.token\r\n        }\r\n      );\r\n      console.log(auth.userId);\r\n      history.push('/' + auth.userId + '/places');\r\n    } catch (err) {}\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"center\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!loadedPlace && !error) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>Could not find place!</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {!isLoading && loadedPlace && (\r\n        <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\r\n          <Input\r\n            id=\"title\"\r\n            element=\"input\"\r\n            type=\"text\"\r\n            label=\"Title\"\r\n            validators={[VALIDATOR_REQUIRE()]}\r\n            errorText=\"Please enter a valid title.\"\r\n            onInput={inputHandler}\r\n            initialValue={loadedPlace.title}\r\n            initialValid={true}\r\n          />\r\n          <Input\r\n            id=\"description\"\r\n            element=\"textarea\"\r\n            label=\"Description\"\r\n            validators={[VALIDATOR_MINLENGTH(5)]}\r\n            errorText=\"Please enter a valid description (min. 5 characters).\"\r\n            onInput={inputHandler}\r\n            initialValue={loadedPlace.description}\r\n            initialValid={true}\r\n          />\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            UPDATE PLACE\r\n          </Button>\r\n        </form>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UpdatePlace;\r\n"],"sourceRoot":""}