{"version":3,"sources":["shared/context/auth-context.js","shared/components/FormElements/Button.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","shared/hooks/auth-hook.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","Button","props","href","React","createElement","className","concat","size","inverse","danger","children","to","Link","exact","type","onClick","disabled","LoadingSpinner","asOverlay","Backdrop","ReactDOM","createPortal","document","getElementById","MainHeader","NavLinks","auth","useContext","NavLink","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","drawerIsOpen","setDrawerIsOpen","useState","closeDrawerHandler","Fragment","openDrawerHandler","logoutTimer","Users","lazy","NewPlace","UserPlaces","UpdatePlace","Auth","App","useAuth","setToken","tokenexpirationDate","setTokenexpirationDate","setUserId","useCallback","uId","expirationDate","tokenExpirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","routes","Switch","Route","path","Redirect","Provider","value","Router","Suspense","fallback","render"],"mappings":"4GAAA,6CAEO,MAAMA,EAAcC,wBAAc,CACrCC,YAAY,EACZC,OAAQ,KACRC,MAAM,KACNC,MAAQA,OACRC,OAASA,U,8BCPb,iCA0CeC,IArCAC,GACTA,EAAMC,KAENC,IAAAC,cAAA,KACEC,UAAS,kBAAAC,OAAoBL,EAAMM,MAAQ,UAAS,KAAAD,OAAIL,EAAMO,SAC5D,kBAAiB,KAAAF,OAAIL,EAAMQ,QAAU,kBACvCP,KAAMD,EAAMC,MAEXD,EAAMS,UAITT,EAAMU,GAENR,IAAAC,cAACQ,IAAI,CACHD,GAAIV,EAAMU,GACVE,MAAOZ,EAAMY,MACbR,UAAS,kBAAAC,OAAoBL,EAAMM,MAAQ,UAAS,KAAAD,OAAIL,EAAMO,SAC5D,kBAAiB,KAAAF,OAAIL,EAAMQ,QAAU,mBAEtCR,EAAMS,UAKXP,IAAAC,cAAA,UACEC,UAAS,kBAAAC,OAAoBL,EAAMM,MAAQ,UAAS,KAAAD,OAAIL,EAAMO,SAC5D,kBAAiB,KAAAF,OAAIL,EAAMQ,QAAU,kBACvCK,KAAMb,EAAMa,KACZC,QAASd,EAAMc,QACfC,SAAUf,EAAMe,UAEff,EAAMS,W,6BCrCb,0BAYeO,IARQhB,GAEnBE,IAAAC,cAAA,OAAKC,UAAS,GAAAC,OAAKL,EAAMiB,WAAa,6BACpCf,IAAAC,cAAA,OAAKC,UAAU,oB,6BCPrB,0CAYec,IAPElB,GACRmB,IAASC,aACdlB,IAAAC,cAAA,OAAKC,UAAU,WAAWU,QAASd,EAAMc,UACzCO,SAASC,eAAe,mB,mSCAbC,MAJIvB,GACVE,IAAAC,cAAA,UAAQC,UAAU,eAAeJ,EAAMS,U,sBCmCjCe,MAlCExB,IACf,MAAMyB,EAAOC,qBAAWlC,KAExB,OACEU,IAAAC,cAAA,MAAIC,UAAU,aACZF,IAAAC,cAAA,UACED,IAAAC,cAACwB,IAAO,CAACjB,GAAG,IAAIE,OAAK,GAAC,cAIvBa,EAAK/B,YACJQ,IAAAC,cAAA,UACED,IAAAC,cAACwB,IAAO,CAACjB,GAAE,IAAAL,OAAMoB,EAAK9B,OAAM,YAAW,cAG1C8B,EAAK/B,YACJQ,IAAAC,cAAA,UACED,IAAAC,cAACwB,IAAO,CAACjB,GAAG,eAAc,eAG5Be,EAAK/B,YACLQ,IAAAC,cAAA,UACED,IAAAC,cAACwB,IAAO,CAACjB,GAAG,SAAQ,iBAGvBe,EAAK/B,YACJQ,IAAAC,cAAA,UACED,IAAAC,cAACJ,IAAM,CAACe,QAASW,EAAK3B,QAAQ,a,cCXzB8B,MAhBI5B,IACjB,MAAM6B,EACJ3B,IAAAC,cAAC2B,IAAa,CACZC,GAAI/B,EAAMgC,KACVC,QAAS,IACTC,WAAW,gBACXC,cAAY,EACZC,eAAa,GAEblC,IAAAC,cAAA,SAAOC,UAAU,cAAcU,QAASd,EAAMc,SAAUd,EAAMS,WAIlE,OAAOU,IAASC,aAAaS,EAASR,SAASC,eAAe,iB,cC8BjDe,MAxCQrC,IACrB,MAAOsC,EAAcC,GAAmBC,oBAAS,GAM3CC,EAAqBA,KACzBF,GAAgB,IAGlB,OACErC,IAAAC,cAACD,IAAMwC,SAAQ,KACZJ,GAAgBpC,IAAAC,cAACe,IAAQ,CAACJ,QAAS2B,IACpCvC,IAAAC,cAACyB,EAAU,CAACI,KAAMM,EAAcxB,QAAS2B,GACvCvC,IAAAC,cAAA,OAAKC,UAAU,+BACbF,IAAAC,cAACqB,EAAQ,QAIbtB,IAAAC,cAACoB,EAAU,KACTrB,IAAAC,cAAA,UACEC,UAAU,4BACVU,QApBkB6B,KACxBJ,GAAgB,KAqBVrC,IAAAC,cAAA,aACAD,IAAAC,cAAA,aACAD,IAAAC,cAAA,cAEFD,IAAAC,cAAA,MAAIC,UAAU,0BACZF,IAAAC,cAACQ,IAAI,CAACD,GAAG,KAAI,eAEfR,IAAAC,cAAA,OAAKC,UAAU,+BACbF,IAAAC,cAACqB,EAAQ,UCxCnB,IAAIoB,E,YCgBJ,MAAMC,EAAQ3C,IAAM4C,KAAK,IAAK,8BACxBC,EAAW7C,IAAM4C,KAAK,IAAK,8BAC3BE,EAAa9C,IAAM4C,KAAK,IAAK,8BAC7BG,EAAc/C,IAAM4C,KAAK,IAAK,8BAC9BI,EAAOhD,IAAM4C,KAAK,IAAK,8BA+DdK,MAzDHA,KAEV,MAAM,MAAEvD,EAAK,MAAEC,EAAK,OAAEC,EAAM,OAAEH,GD1BTyD,MAEvB,MAAOxD,EAAOyD,GAAYb,sBACnBc,EAAqBC,GAA0Bf,sBAC/C7C,EAAQ6D,GAAahB,qBAEtB3C,EAAQ4D,sBAAY,CAACC,EAAI9D,EAAM+D,KACnCN,EAASzD,GACT,MAAMgE,EAAsBD,GAAkB,IAAIE,MAAK,IAAIA,MAAOC,UAAY,MAC9EP,EAAuBK,GACvBG,aAAaC,QAAQ,WAAYC,KAAKC,UAAU,CAC9CvE,OAAO+D,EACP9D,MAAMA,EACNuE,WAAYP,EAAoBQ,iBAElCZ,EAAUE,IACT,IAEG5D,EAAS2D,sBAAY,KACzBJ,EAAS,MACTE,EAAuB,MACvBQ,aAAaM,WAAW,YACxBb,EAAU,OACT,IAuBH,OArBAc,oBAAU,KACR,GAAG1E,GAAS0D,EACZ,CACE,MAAMiB,EAAgBjB,EAAoBQ,WAAY,IAAID,MAAOC,UACjElB,EAAe4B,WAAW1E,EAAQyE,QAGlCE,aAAa7B,IAEf,CAAChD,EAAME,EAAOwD,IAEhBgB,oBAAU,KACR,MAAMI,EAAaT,KAAKU,MAAMZ,aAAaa,QAAQ,aAChDF,GACDA,EAAW9E,OACX,IAAIiE,KAAKa,EAAWP,YAAc,IAAIN,MAEtChE,EAAM6E,EAAW/E,OAAO+E,EAAW9E,MAAM,IAAIiE,KAAKa,EAAWP,cAE/D,CAACtE,IAEI,CAACD,QAAOC,QAAOC,SAAQH,WCpBayD,GAEzC,IAAIyB,EAqCJ,OAlCEA,EADEjF,EAEAM,IAAAC,cAAC2E,IAAM,KACL5E,IAAAC,cAAC4E,IAAK,CAACC,KAAK,IAAIpE,OAAK,GACnBV,IAAAC,cAAC0C,EAAK,OAER3C,IAAAC,cAAC4E,IAAK,CAACC,KAAK,kBAAkBpE,OAAK,GACjCV,IAAAC,cAAC6C,EAAU,OAEb9C,IAAAC,cAAC4E,IAAK,CAACC,KAAK,cAAcpE,OAAK,GAC7BV,IAAAC,cAAC4C,EAAQ,OAEX7C,IAAAC,cAAC4E,IAAK,CAACC,KAAK,oBACV9E,IAAAC,cAAC8C,EAAW,OAEd/C,IAAAC,cAAC8E,IAAQ,CAACvE,GAAG,OAKfR,IAAAC,cAAC2E,IAAM,KACL5E,IAAAC,cAAC4E,IAAK,CAACC,KAAK,IAAIpE,OAAK,GACnBV,IAAAC,cAAC0C,EAAK,OAER3C,IAAAC,cAAC4E,IAAK,CAACC,KAAK,kBAAkBpE,OAAK,GACjCV,IAAAC,cAAC6C,EAAU,OAEb9C,IAAAC,cAAC4E,IAAK,CAACC,KAAK,SACV9E,IAAAC,cAAC+C,EAAI,OAEPhD,IAAAC,cAAC8E,IAAQ,CAACvE,GAAG,WAMjBR,IAAAC,cAACX,IAAY0F,SAAQ,CACnBC,MAAO,CAAEzF,aAAcE,EACrBA,MAAMA,EACND,OAAQA,EACRE,MAAOA,EACPC,OAAQA,IAEVI,IAAAC,cAACiF,IAAM,KACLlF,IAAAC,cAACkC,EAAc,MACfnC,IAAAC,cAAA,YAAMD,IAAAC,cAACkF,WAAQ,CAACC,SAAUpF,IAAAC,cAAA,OAAKC,UAAU,UAASF,IAAAC,cAACa,IAAc,QAAW6D,OCzEpF1D,IAASoE,OAAOrF,IAAAC,cAACgD,EAAG,MAAK9B,SAASC,eAAe,W","file":"static/js/main.a0df08f1.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext({\r\n    isLoggedIn: false, \r\n    userId: null,\r\n    token:null,\r\n    login : () => {},\r\n    logout : () => {}}\r\n);\r\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React from 'react';\n\nimport './MainHeader.css';\n\nconst MainHeader = props => {\n  return <header className=\"main-header\">{props.children}</header>;\n};\n\nexport default MainHeader;\n","import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Button from '../FormElements/Button';\nimport { AuthContext } from '../../context/auth-context';\nimport './NavLinks.css';\n\nconst NavLinks = props => {\n  const auth = useContext(AuthContext);\n\n  return (\n    <ul className=\"nav-links\">\n      <li>\n        <NavLink to=\"/\" exact>\n          ALL USERS\n        </NavLink>\n      </li>\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/places/new\">ADD PLACE</NavLink>\n        </li>\n      )}\n      {!auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <Button onClick={auth.logout}>LOGOUT</Button>\n        </li>\n      )}\n    </ul>\n  );\n};\n\nexport default NavLinks;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './SideDrawer.css';\n\nconst SideDrawer = props => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\n    </CSSTransition>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\n};\n\nexport default SideDrawer;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport MainHeader from './MainHeader';\nimport NavLinks from './NavLinks';\nimport SideDrawer from './SideDrawer';\nimport Backdrop from '../UIElements/Backdrop';\nimport './MainNavigation.css';\n\nconst MainNavigation = props => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const openDrawerHandler = () => {\n    setDrawerIsOpen(true);\n  };\n\n  const closeDrawerHandler = () => {\n    setDrawerIsOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n        <nav className=\"main-navigation__drawer-nav\">\n          <NavLinks />\n        </nav>\n      </SideDrawer>\n\n      <MainHeader>\n        <button\n          className=\"main-navigation__menu-btn\"\n          onClick={openDrawerHandler}\n        >\n          <span />\n          <span />\n          <span />\n        </button>\n        <h1 className=\"main-navigation__title\">\n          <Link to=\"/\">YourPlaces</Link>\n        </h1>\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </React.Fragment>\n  );\n};\n\nexport default MainNavigation;\n","import { useState,useCallback,useEffect } from \"react\";\r\n\r\nlet logoutTimer;\r\n\r\nexport const useAuth = () => {\r\n\r\nconst [token, setToken] = useState();\r\nconst [tokenexpirationDate, setTokenexpirationDate] = useState();\r\nconst [userId, setUserId] = useState();\r\n\r\nconst login = useCallback((uId,token,expirationDate) => {\r\n  setToken(token);\r\n  const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n  setTokenexpirationDate(tokenExpirationDate);\r\n  localStorage.setItem('userData', JSON.stringify({\r\n    userId:uId,\r\n    token:token,\r\n    expiration: tokenExpirationDate.toISOString()\r\n  }));\r\n  setUserId(uId);\r\n}, []);\r\n\r\nconst logout = useCallback(() => {\r\n  setToken(null);\r\n  setTokenexpirationDate(null);\r\n  localStorage.removeItem('userData');\r\n  setUserId(null);\r\n}, []);\r\n\r\nuseEffect(()=> {\r\n  if(token && tokenexpirationDate)\r\n  {\r\n    const remainingTime = tokenexpirationDate.getTime() - new Date().getTime();\r\n    logoutTimer =  setTimeout(logout, remainingTime);\r\n  }\r\n  else{\r\n    clearTimeout(logoutTimer);\r\n  }\r\n},[token,logout,tokenexpirationDate])\r\n\r\nuseEffect(()=>{\r\n  const storedData = JSON.parse(localStorage.getItem('userData'));\r\n  if(storedData && \r\n    storedData.token && \r\n    new Date(storedData.expiration) > new Date()    )\r\n  {\r\n    login(storedData.userId,storedData.token,new Date(storedData.expiration));\r\n  }\r\n},[login]);\r\n\r\nreturn {token, login, logout, userId};\r\n\r\n};","import React,{Suspense} from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from 'react-router-dom';\n\n// import Users from './user/pages/Users';\n// import NewPlace from './places/pages/NewPlace';\n// import UserPlaces from './places/pages/UserPlaces';\n// import UpdatePlace from './places/pages/UpdatePlace';\n// import Auth from './user/pages/Auth';\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport { AuthContext } from './shared/context/auth-context';\nimport { useAuth } from './shared/hooks/auth-hook';\nimport LoadingSpinner from './shared/components/UIElements/LoadingSpinner';\n\nconst Users = React.lazy(()=> import('./user/pages/Users'));\nconst NewPlace = React.lazy(()=> import('./places/pages/NewPlace'));\nconst UserPlaces = React.lazy(()=> import('./places/pages/UserPlaces'));\nconst UpdatePlace = React.lazy(()=> import('./places/pages/UpdatePlace'));\nconst Auth = React.lazy(()=> import('./user/pages/Auth'));\n// const MainNavigation = React.lazy(()=> import('./shared/components/Navigation/MainNavigation'));\n// const Auth = React.lazy(()=> import('./user/pages/Auth'));\n\n\n\nconst App = () => {\n\n  const { token, login, logout, userId } = useAuth();\n\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n        </Route>\n        <Route path=\"/places/:placeId\">\n          <UpdatePlace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{ isLoggedIn: !!token, \n        token:token,\n        userId: userId,\n        login: login, \n        logout: logout }}\n    >\n      <Router>\n        <MainNavigation />\n        <main><Suspense fallback={<div className=\"center\"><LoadingSpinner/></div>}>{routes}</Suspense></main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}