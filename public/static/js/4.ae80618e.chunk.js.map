{"version":3,"sources":["shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/http-hook.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","shared/util/validators.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","shared/components/FormElements/ImageUpload.js","places/pages/NewPlace.js"],"names":["ErrorModal","props","React","createElement","Modal","onCancel","onClear","header","show","error","footer","Button","onClick","ModalOverlay","content","className","concat","style","headerClass","onSubmit","event","preventDefault","contentClass","children","footerClass","ReactDOM","createPortal","document","getElementById","Fragment","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","useHttpClient","isLoading","setIsLoading","useState","setError","activeHttpRequests","useRef","sendRequest","useCallback","async","url","method","arguments","length","undefined","body","headers","HttpabortController","AbortController","current","push","response","fetch","signal","responseData","json","filter","reqCtrl","ok","Error","message","err","useEffect","forEach","abortController","abort","clearError","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","apply","_objectSpread2","target","i","source","getOwnPropertyDescriptors","defineProperties","VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","validators","isValid","validator","trim","test","inputReducer","state","action","_objectSpread","isTouched","Input","inputState","dispatch","useReducer","initialValue","initialValid","id","onInput","changeHandler","touchHandler","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","intialInputs","initialFormValidity","formState","inputData","formValidity","ImageUpload","file","setFile","previewUrl","setPreviewUrl","setIsValid","filepickerRef","fileReader","FileReader","onload","result","readAsDataURL","ref","display","accept","pickedFile","fileIsValid","files","center","src","alt","pickImageHandler","click","NewPlace","auth","useContext","AuthContext","inputHandler","title","description","address","image","History","useHistory","LoadingSpinner","formData","FormData","append","process","Authorization","token","userId","disabled"],"mappings":"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","file":"static/js/4.ae80618e.chunk.js","sourcesContent":["import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import { useState,useCallback, useRef, useEffect } from 'react';\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading,setIsLoading] = useState(false);\r\n  const [error,setError] = useState();\r\n\r\n    const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(async (url,method=\"GET\",body=null,headers={}) => \r\n  {\r\n    try{\r\n        setIsLoading(true);\r\n\r\n        const HttpabortController = new AbortController();\r\n        activeHttpRequests.current.push(HttpabortController);\r\n\r\n        const response = await fetch(url,{\r\n            method,\r\n            body,\r\n            headers,\r\n            signal:HttpabortController.signal\r\n        });\r\n  \r\n        const responseData = await response.json();\r\n\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(reqCtrl => reqCtrl!== HttpabortController)\r\n        if(!response.ok)\r\n        {\r\n          throw new Error(responseData.message);\r\n        }\r\n        setIsLoading(false);\r\n        return responseData;\r\n    }\r\n    catch(err){\r\n        setError(err.message || 'Something went Wrong');\r\n        setIsLoading(false);\r\n        throw err;\r\n    }\r\n  },[])\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  }\r\n\r\n  useEffect(\r\n    ()=> {    \r\n        return ()=>{\r\n            activeHttpRequests.current.forEach(abortController => {\r\n                abortController.abort();\r\n            });\r\n        };\r\n    },[]);\r\n\r\n  return {isLoading,error,sendRequest, clearError};\r\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n    case 'TOUCH': {\n      return {\n        ...state,\n        isTouched: true\n      }\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid)\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${!inputState.isValid && inputState.isTouched &&\n        'form-control--invalid'}`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import { useCallback, useReducer } from 'react';\r\n\r\nconst formReducer = (state, action) => {\r\n    switch (action.type) {\r\n      case 'INPUT_CHANGE':\r\n        let formIsValid = true;\r\n        for (const inputId in state.inputs) {\r\n          if(!state.inputs[inputId])\r\n          {\r\n            continue;\r\n          }\r\n            if (inputId === action.inputId) {\r\n              formIsValid = formIsValid && action.isValid;\r\n            } else {\r\n              formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n            }\r\n        }\r\n        return {\r\n          ...state,\r\n          inputs: {\r\n            ...state.inputs,\r\n            [action.inputId]: { value: action.value, isValid: action.isValid }\r\n          },\r\n          isValid: formIsValid\r\n        };\r\n      case 'SET_DATA':\r\n        return {\r\n          inputs: action.inputs,\r\n          isValid: action.isValid\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\nexport const useForm = (intialInputs,initialFormValidity) => {\r\n    const [formState, dispatch] = useReducer(formReducer, {\r\n        inputs:intialInputs,\r\n        isValid: initialFormValidity\r\n      });\r\n\r\n      const inputHandler = useCallback((id, value, isValid) => {\r\n        dispatch({\r\n          type: 'INPUT_CHANGE',\r\n          value: value,\r\n          isValid: isValid,\r\n          inputId: id\r\n        });\r\n      }, []);\r\n\r\n      const setFormData = useCallback((inputData, formValidity)=>{\r\n        dispatch({\r\n          type: 'SET_DATA',\r\n          inputs: inputData,\r\n          isValid: formValidity,\r\n        });\r\n      },[]);\r\n\r\n    return [formState, inputHandler, setFormData];\r\n}","import React, {useRef, useState, useEffect} from \"react\";\r\nimport Button from \"./Button\";\r\nimport './ImageUpload.css'\r\n\r\nconst ImageUpload = props => {\r\n\r\n    const [file, setFile] = useState();\r\n    const [previewUrl, setPreviewUrl] = useState();\r\n    const [isValid, setIsValid] = useState(false);\r\n\r\n    const filepickerRef = useRef();\r\n\r\n    useEffect(() => {\r\n        if (!file) {\r\n            return;\r\n          }\r\n        const fileReader = new FileReader();\r\n        fileReader.onload = () => {\r\n        setPreviewUrl(fileReader.result);\r\n        };\r\n        fileReader.readAsDataURL(file);\r\n    },[file]);\r\n\r\n    const pickedHandler = event => {\r\n        let pickedFile;\r\n        let fileIsValid = isValid;\r\n        if (event.target.files && event.target.files.length === 1) {\r\n          pickedFile = event.target.files[0];\r\n          setFile(pickedFile);\r\n          setIsValid(true);\r\n          fileIsValid = true;\r\n        } else {\r\n          setIsValid(false);\r\n          fileIsValid = false;\r\n        }\r\n        props.onInput(props.id, pickedFile, fileIsValid);    \r\n    }\r\n\r\n        const pickImageHandler =() => {\r\n        filepickerRef.current.click();\r\n    }\r\n\r\n    return (\r\n        <div className = \"form-control\">\r\n            <input \r\n                id={props.id}\r\n                ref={filepickerRef}\r\n                style={{display:'none'}} \r\n                type=\"file\" \r\n                accept=\".jpg,.png,.jpeg\"\r\n                onChange={pickedHandler}\r\n            />\r\n        <div className={`image-upload ${props.center && 'center'}`}>\r\n            <div className=\"image-upload__preview\">\r\n            {previewUrl && <img src={previewUrl} alt=\"Preview\"/>}\r\n            {!previewUrl && <p>Please Upload image.</p>}\r\n            </div>\r\n            <Button type=\"button\" onClick={pickImageHandler}>UPLOAD IMAGE</Button>\r\n        </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ImageUpload;","import React, {useContext} from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\nimport './PlaceForm.css';\n\nconst NewPlace = () => {\n  const {isLoading,error,sendRequest,clearError} = useHttpClient();\n  const auth = useContext(AuthContext);\n  const [formState, inputHandler] = useForm(  \n    {\n    title: {\n      value: '',\n      isValid: false\n    },\n    description: {\n      value: '',\n      isValid: false\n    },\n    address: {\n      value: '',\n      isValid: false\n    },\n    image: {\n      value: null,\n      isValid: false\n    },\n  },false);\n\n  const History = useHistory();\n\n  const placeSubmitHandler = async event => {\n      event.preventDefault();\n      try{\n\n        const formData = new FormData();\n\n        formData.append('title',formState.inputs.title.value);\n        formData.append('description',formState.inputs.description.value);\n        formData.append('address',formState.inputs.address.value);\n        formData.append('image',formState.inputs.image.value);\n\n\n        await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/places/`,\n          'POST',\n          formData,\n          {\n            Authorization: 'Bearer ' + auth.token\n          }\n        );\n      }\n        catch(err){\n      }\n      History.push('/' + auth.userId + '/places');\n    };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError}/>\n      {isLoading && <LoadingSpinner/>}\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n        <Input\n          id=\"title\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Title\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid title.\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"description\"\n          element=\"textarea\"\n          label=\"Description\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please enter a valid description (at least 5 characters).\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"address\"\n          element=\"input\"\n          label=\"Address\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid address.\"\n          onInput={inputHandler}\n        />\n        <ImageUpload \n        id=\"image\"\n        onInput={inputHandler}\n        errorText=\"Please upload image\"\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          ADD PLACE\n        </Button>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default NewPlace;\n"],"sourceRoot":""}