{"version":3,"sources":["shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/http-hook.js","shared/components/UIElements/Card.js","shared/components/UIElements/Avatar.js","user/components/UserItem.js","user/components/UsersList.js","user/pages/Users.js"],"names":["ErrorModal","props","React","createElement","Modal","onCancel","onClear","header","show","error","footer","Button","onClick","ModalOverlay","content","className","concat","style","headerClass","onSubmit","event","preventDefault","contentClass","children","footerClass","ReactDOM","createPortal","document","getElementById","Fragment","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","useHttpClient","isLoading","setIsLoading","useState","setError","activeHttpRequests","useRef","sendRequest","useCallback","async","url","method","arguments","length","undefined","body","headers","HttpabortController","AbortController","current","push","response","fetch","signal","responseData","json","filter","reqCtrl","ok","Error","message","err","useEffect","forEach","abortController","abort","clearError","Card","Avatar","src","image","alt","width","height","UserItem","Link","to","id","replace","name","placeCount","UsersList","items","map","user","key","places","Users","loadedUsers","setLoadedUsers","process","users","sendReq","LoadingSpinner"],"mappings":"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","file":"static/js/7.d50d65a7.chunk.js","sourcesContent":["import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import { useState,useCallback, useRef, useEffect } from 'react';\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading,setIsLoading] = useState(false);\r\n  const [error,setError] = useState();\r\n\r\n    const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(async (url,method=\"GET\",body=null,headers={}) => \r\n  {\r\n    try{\r\n        setIsLoading(true);\r\n\r\n        const HttpabortController = new AbortController();\r\n        activeHttpRequests.current.push(HttpabortController);\r\n\r\n        const response = await fetch(url,{\r\n            method,\r\n            body,\r\n            headers,\r\n            signal:HttpabortController.signal\r\n        });\r\n  \r\n        const responseData = await response.json();\r\n\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(reqCtrl => reqCtrl!== HttpabortController)\r\n        if(!response.ok)\r\n        {\r\n          throw new Error(responseData.message);\r\n        }\r\n        setIsLoading(false);\r\n        return responseData;\r\n    }\r\n    catch(err){\r\n        setError(err.message || 'Something went Wrong');\r\n        setIsLoading(false);\r\n        throw err;\r\n    }\r\n  },[])\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  }\r\n\r\n  useEffect(\r\n    ()=> {    \r\n        return ()=>{\r\n            activeHttpRequests.current.forEach(abortController => {\r\n                abortController.abort();\r\n            });\r\n        };\r\n    },[]);\r\n\r\n  return {isLoading,error,sendRequest, clearError};\r\n}","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Avatar from '../../shared/components/UIElements/Avatar';\nimport Card from '../../shared/components/UIElements/Card';\nimport './UserItem.css';\n\nconst UserItem = props => {\n\n  return (\n    <li className=\"user-item\">\n      <Card className=\"user-item__content\">\n        <Link to={`/${props.id}/places`}>\n          <div className=\"user-item__image\">\n            <Avatar image={`http://localhost:5000/${props.image.replace(/\\\\/g, '/')}`} alt={props.name} />\n          </div>\n          <div className=\"user-item__info\">\n            <h2>{props.name}</h2>\n            <h3>\n              {props.placeCount} {props.placeCount === 1 ? 'Place' : 'Places'}\n            </h3>\n          </div>\n        </Link>\n      </Card>\n    </li>\n  );\n};\n\nexport default UserItem;\n","import React from 'react';\n\nimport UserItem from './UserItem';\nimport Card from '../../shared/components/UIElements/Card';\nimport './UsersList.css';\n\nconst UsersList = props => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>No users found.</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <ul className=\"users-list\">\n      {props.items.map(user => (\n        <UserItem\n          key={user.id}\n          id={user.id}\n          image={user.image}\n          name={user.name}\n          placeCount={user.places.length}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default UsersList;\n","import React,{useEffect, useState} from 'react';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport UsersList from '../components/UsersList';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nconst Users = () => {\n\n  const {isLoading,error,sendRequest,clearError} = useHttpClient();\n  const [loadedUsers,setLoadedUsers] = useState();\n  \n  useEffect(()=> {\n\n    const sendReq = async () => {\n        try{\n          const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/users/`);\n          setLoadedUsers(responseData.users);\n      }\n      catch(err){\n      }\n    };\n    sendReq();\n  },[sendRequest]);\n\n  return (<React.Fragment>\n        <ErrorModal error={error} onClear={clearError}/>\n        {isLoading && (<div className='center'><LoadingSpinner/></div>)}\n        \n  {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\n  </React.Fragment>);\n};\n\nexport default Users;\n"],"sourceRoot":""}